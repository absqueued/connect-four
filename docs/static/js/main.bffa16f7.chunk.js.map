{"version":3,"sources":["constants.js","Start/index.js","Board/header.js","Board/board.js","Board/footer.js","Board/index.js","App/index.js","index.js"],"names":["APP_DEFAULTS","starterColor","allColors","rows","cols","GAME_STATE","Logo","size","className","Start","onStart","onClick","playerRed","prompt","playerBlue","localforage","setItem","red","blue","then","v","type","rel","Player","name","theme","BoardHeader","player","BoardGrid","currentPlayer","onPlayerMoves","Array","from","length","useState","allUsers","setAllUsers","positions","setPositions","gameState","setGameState","hasDisc","x","y","find","pos","getItem","usr","Object","keys","changeTurn","newPlayer","filter","c","join","useEffect","state","winner","annouceWinner","allCombos","Set","map","p","every","i","currCombo","has","checkWinState","r","disc","nextAvailableYPos","yi","makeMove","uuidv4","slice","BoardFooter","onChange","clear","Board","setCurrentPlayer","App","start","setStart","config","storeName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEMA,EAAe,CACnBC,aAAc,OACdC,UAAW,CAAC,OAAQ,OACpBC,KAAM,EACNC,KAAM,GAGFC,EACG,aADHA,EAEE,YAFFA,EAGK,e,OCLLC,EAAO,SAAC,GAAqB,IAAD,IAAlBC,YAAkB,MAAX,KAAW,EAChC,OACE,qBAAKC,UAAS,+BAA0BD,GAAxC,SACE,qBAAIC,UAAU,OAAd,UACE,4CADF,IACwB,+CAMxBC,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAqBf,OACE,0BAASF,UAAU,mBAAnB,UACE,cAAC,EAAD,IACA,0DACA,wBACEG,QAxBY,WAChB,IAAMC,EAAYC,OAAO,oBACnBC,EAAaD,OAAO,oBAE1B,IAAID,IAAcE,EAAY,OAAO,EAErCC,IAAYC,QAAQ,gBAAiBhB,EAAaC,cAElDc,IACGC,QAAQ,QAAS,CAChBC,IAAKL,EACLM,KAAMJ,IAEPK,MAAK,WACJJ,IAAYC,QAAQX,GAAkB,GAAMc,MAAK,SAAAC,GAC/CV,EAAQU,UAUVC,KAAK,SACLb,UAAU,YACVc,IAAI,sBAJN,0BCpCAC,EAAS,SAAC,GAAsC,IAAD,IAAnCC,YAAmC,MAA5B,OAA4B,MAApBC,aAAoB,MAAZ,OAAY,EACnD,OACE,sBAAKjB,UAAS,yBAAoBiB,GAAlC,mBAAkDD,MAIhDE,EAAc,SAAC,GAAqB,IAApBD,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,OAE3B,OACI,mCACE,cAAC,EAAD,CAAMpB,KAAK,OACX,cAAC,EAAD,CAAQiB,KAAMG,EAAQF,MAAOA,Q,sBCR/BG,EAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC5B3B,EAAO4B,MAAMC,KAAK,CAAEC,OAAQjC,EAAaG,OACzCC,EAAO2B,MAAMC,KAAK,CAAEC,OAAQjC,EAAaI,OAFO,EAItB8B,mBAAS,IAJa,mBAI/CC,EAJ+C,KAIrCC,EAJqC,OAKpBF,mBAAS,IALW,mBAK/CG,EAL+C,KAKpCC,EALoC,OAMpBJ,mBAAS7B,GANW,mBAM/CkC,EAN+C,KAMpCC,EANoC,KAQhDC,EAAU,SAACC,EAAGC,GAClB,OAAON,EAAUO,MAAK,SAACC,GAAD,OAASA,EAAIH,IAAMA,GAAKG,EAAIF,IAAMA,MAuB1D5B,IAAY+B,QAAQ,SAAS3B,MAAK,SAAC4B,GAC5BC,OAAOC,KAAKd,GAAUF,QAAQG,EAAYW,MAGjD,IAAMG,EAAa,SAACrB,GAClB,IAAMsB,EAAYnD,EAAaE,UAC5BkD,QAAO,SAACC,GAAD,OAAOA,IAAMxB,KACpByB,KAAK,IACRvC,IAAYC,QAAQ,gBAAiBmC,GAAWhC,MAAK,SAACC,GACpDU,EAAcV,OAwDlB,OAtCAmC,qBAAU,WACR,IAAIb,EAAGC,GAfa,SAACa,GACrB,GAAc,QAAVA,GAA6B,SAAVA,EAAkB,CACvC,IAAMC,EAAStB,EAASqB,GACxBhB,EAAaiB,QAEbjB,EAAagB,GA4CfE,CAjCsB,SAACrB,GACrB,IADmC,EAC7BsB,EAAY,IAAIC,IACpBvB,EAAUwB,KAAI,SAAChB,GAAD,MAAS,CAACA,EAAIH,EAAGG,EAAIF,GAAGW,KAAKT,EAAIiB,OAFd,cAOnBzB,GAPmB,qBAQjC,IARiC,IAO1BQ,EAP0B,QAQjC,MAAe,CACb,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,IAJP,eAKG,CAAC,IAAD,sBACD,GANIH,EAKH,KALMC,EAKN,KAEC,CAAC,EAAG,EAAG,GAAGoB,OAAM,SAACC,GACf,IAAIC,EAAY,CAACpB,EAAIH,EAAIsB,EAAItB,EAAGG,EAAIF,EAAIqB,EAAIrB,GAAGW,KAAKT,EAAIiB,GACxD,OAAOH,EAAUO,IAAID,MAGvB,MAAM,CAAN,EAAOpB,EAAIiB,KAbjB,2BAA2B,CAAC,IAAD,yCAPQ,8BAyBnC,OAAIzB,EAAUJ,SAAW9B,EAAK8B,OAAS7B,EAAK6B,OACnC5B,EAEAA,EAII8D,CAAc9B,MAE5B,CAACA,IAGF,oCAEGE,IAAclC,GAAsB,6CAAgBkC,KAErD,sBAAK/B,UAAS,iCAA4BqB,GAA1C,UACGzB,EAAKyD,KAAI,SAACR,EAAGX,GAAJ,OACR,qBAAoBlC,UAAU,UAA9B,SACGL,EAAK0D,KAAI,SAACO,EAAGzB,GACZ,IAAM0B,EAAO5B,EAAQC,EAAGC,GACxB,OACE,qBAEEhC,QAAS,kBAlGR,SAAC+B,EAAGC,EAAGmB,GACtB,GAAGvB,IAAclC,GAAsBkC,IAAclC,EAArD,CAIA,IAFA,IACIiE,GAAqB,EAChBC,EAAKpE,EAAK8B,OAAS,EAAGsC,GAAM,EAAGA,IAEtC,IADU9B,EAAQC,EAAG6B,GACP,CACZD,EAAoBC,EACpB,MAIJ,IAA2B,IAAvBD,EACF,OAAO,EAEThC,GAAa,SAACD,GAAD,4BAAmBA,GAAnB,CAA8B,CAAEK,IAAGC,EAAG2B,EAAmBR,UACtEZ,EAAWY,IAiFkBU,CAAS9B,EAAGC,EAAGd,IAC9BrB,UAAS,mBAAc6D,EAAOA,EAAKP,EAAI,IAHzC,0BAKapB,EALb,gBAKsBC,IAJf8B,mBALHA,kBAeZ,8BACI,wBAAQjE,UAAU,mBAAmBG,QAAS,kBAjEtD2B,GAAa,SAAAO,GAAG,OAAIA,EAAI6B,MAAM,EAAG7B,EAAIZ,OAAS,WAC9CiB,EAAWrB,IAgEH,2BCzHN8C,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAYpB,OACE,mCACE,wBAAQpE,UAAU,mBAAmBG,QAAS,WAZhDiE,GAAS,IAYP,mBAGA,wBAAQpE,UAAU,mBAAmBG,QAAS,WAXhDI,IAAY8D,QAAQ1D,MAAK,WACvBJ,IAAYC,QAAQX,GAAkB,GAAOc,MAAK,SAAAC,GAChDwD,EAASxD,UASX,sBCdA0D,EAAQ,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SAAc,EACgB1C,mBAASlC,EAAaC,cADtC,mBACpB4B,EADoB,KACLkD,EADK,OAEM7C,mBAAS,IAFf,mBAEpBC,EAFoB,KAEVC,EAFU,KAQ5B,OAJArB,IAAY+B,QAAQ,SAAS3B,MAAK,SAAA4B,GAC5BC,OAAOC,KAAKd,GAAUF,QAAQG,EAAYW,MAI9C,0BAASvC,UAAU,QAAnB,UACE,cAAC,EAAD,CAAaiB,MAAOI,EAAeF,OAAQQ,EAASN,KACpD,cAAC,EAAD,CAAWA,cAAeA,EAAeC,cAAe,SAACV,GAAD,OAAO2D,EAAiB3D,MAChF,cAAC,EAAD,CAAawD,SAAUA,QCAdI,MAff,WAAgB,IAAD,EACe9C,oBAAS,GADxB,mBACL+C,EADK,KACEC,EADF,KAOb,OAJAnE,IAAY+B,QAAQzC,GAAkBc,MAAK,SAAAqC,GACzC0B,EAAS1B,MAIT,kCACIyB,GAAS,cAAC,EAAD,CAAOvE,QAAS,SAAAU,GAAC,OAAI8D,EAAS9D,MACxC6D,GAAS,cAAC,EAAD,CAAOL,SAAU,SAAAxD,GAAC,OAAI8D,EAAS9D,UCP/CL,IAAYoE,OAAO,CACjB3D,KAAM,iBACN4D,UAAW,aAGbrE,IAAY+B,QAAQzC,GAAkBc,MAAK,SAAAC,GACrCA,GAAGL,IAAYC,QAAQX,GAAkB,MAK/CgF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bffa16f7.chunk.js","sourcesContent":["/** App Constants */\n\nconst APP_DEFAULTS = {\n  starterColor: 'blue',\n  allColors: ['blue', 'red'],\n  rows: 6,\n  cols: 7\n};\n\nconst GAME_STATE = {\n  start: \"game.start\",\n  draw: \"game.draw\",\n  playing: \"game.playing\",\n  won: \"game.won\",\n};\n\nexport { APP_DEFAULTS, GAME_STATE };\n","/* Start */\nimport localforage from \"localforage\";\n\nimport { log } from \"../utils\"; // eslint-disable-line\nimport { APP_DEFAULTS, GAME_STATE } from \"../constants\";\n\n\nconst Logo = ({ size = \"md\" }) => {\n  return (\n    <div className={`logo-wrap logo-wrap--${size}`}>\n      <h1 className=\"logo\">\n        <span>\"Connect</span> <span>Four\"</span>\n      </h1>\n    </div>\n  );\n};\n\nconst Start = ({ onStart }) => {\n\n  const startGame = () => {\n    const playerRed = prompt(\"Player One name?\");\n    const playerBlue = prompt(\"Player Two name?\");\n\n    if(!playerRed || !playerBlue) return false;\n    \n    localforage.setItem('currentPlayer', APP_DEFAULTS.starterColor);\n    \n    localforage\n      .setItem(\"users\", {\n        red: playerRed,\n        blue: playerBlue,\n      })\n      .then(() => {\n        localforage.setItem(GAME_STATE.start, true).then(v => {\n          onStart(v);\n        });\n      });\n  };\n  return (\n    <section className=\"page page--start\">\n      <Logo />\n      <p>Simple as a straight line</p>\n      <button\n        onClick={startGame}\n        type=\"button\"\n        className=\"btn-start\"\n        rel=\"noopener noreferrer\"\n      >\n        Play Now\n      </button>\n    </section>\n  );\n};\n\nexport { Start, Logo };\n","/** Grid */\n\nimport { log } from \"../utils\"; // eslint-disable-line\n\nimport { Logo } from \"../Start\";\n\nconst Player = ({ name = \"John\", theme = 'blue'}) => {\n  return (\n    <div className={`player player--${theme}`}>TURN: {name}</div>\n  );\n};\n\nconst BoardHeader = ({theme, player}) => {\n\n  return (\n      <header>\n        <Logo size=\"sm\" />\n        <Player name={player} theme={theme} />\n      </header>\n  );\n};\n\nexport { BoardHeader };\n","/** Grid */\n\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport localforage from \"localforage\";\n\nimport { log } from \"../utils\"; // eslint-disable-line\nimport { APP_DEFAULTS, GAME_STATE } from \"../constants\";\n\nconst BoardGrid = ({ currentPlayer, onPlayerMoves }) => {\n  const rows = Array.from({ length: APP_DEFAULTS.rows });\n  const cols = Array.from({ length: APP_DEFAULTS.cols });\n\n  const [allUsers, setAllUsers] = useState({});\n  const [positions, setPositions] = useState([]);\n  const [gameState, setGameState] = useState(GAME_STATE.start);\n\n  const hasDisc = (x, y) => {\n    return positions.find((pos) => pos.x === x && pos.y === y);\n  };\n\n  const makeMove = (x, y, p) => {\n    if(gameState !== GAME_STATE.playing && gameState !== GAME_STATE.draw) return;\n\n    let anyDisc = null;\n    let nextAvailableYPos = -1;\n    for (let yi = rows.length - 1; yi >= 0; yi--) {\n      anyDisc = hasDisc(x, yi);\n      if (!anyDisc) {\n        nextAvailableYPos = yi;\n        break;\n      }\n    }\n\n    if (nextAvailableYPos === -1) {\n      return false;\n    }\n    setPositions((positions) => [...positions, { x, y: nextAvailableYPos, p }]);\n    changeTurn(p);\n  };\n\n  localforage.getItem(\"users\").then((usr) => {\n    if (!Object.keys(allUsers).length) setAllUsers(usr);\n  });\n\n  const changeTurn = (currentPlayer) => {\n    const newPlayer = APP_DEFAULTS.allColors\n      .filter((c) => c !== currentPlayer)\n      .join(\"\");\n    localforage.setItem(\"currentPlayer\", newPlayer).then((v) => {\n      onPlayerMoves(v);\n    });\n  };\n\n  const annouceWinner = (state) => {\n    if (state === \"red\" || state === \"blue\") {\n      const winner = allUsers[state];\n      setGameState(winner);\n    } else {\n      setGameState(state);\n    }\n  };\n\n  const unDo = () => {\n    setPositions(pos => pos.slice(0, pos.length - 1));\n    changeTurn(currentPlayer);\n  }\n\n  useEffect(() => {\n    let x, y;\n    const checkWinState = (positions) => {\n      const allCombos = new Set(\n        positions.map((pos) => [pos.x, pos.y].join(pos.p))\n      );\n\n      //3blue5\n\n      for (let pos of positions) {\n        for ([x, y] of [\n          [0, 1],\n          [1, 0],\n          [1, 1],\n          [1, -1],\n        ]) {\n          if (\n            [1, 2, 3].every((i) => {\n              let currCombo = [pos.x + i * x, pos.y + i * y].join(pos.p);\n              return allCombos.has(currCombo);\n            })\n          ) {\n            return pos.p;\n          }\n        }\n      }\n\n      if (positions.length === rows.length * cols.length) {\n        return GAME_STATE.draw;\n      } else {\n        return GAME_STATE.playing;\n      }\n    };\n\n    const result = checkWinState(positions);\n    annouceWinner(result);\n  }, [positions]);\n\n  return (\n    <article>\n      \n      {gameState !== GAME_STATE.playing && <h1>Winner is: {gameState}</h1>}\n\n      <div className={`board-grid board-grid--${currentPlayer}`}>\n        {cols.map((c, x) => (\n          <div key={uuidv4()} className=\"box-row\">\n            {rows.map((r, y) => {\n              const disc = hasDisc(x, y);\n              return (\n                <div\n                  key={uuidv4()}\n                  onClick={() => makeMove(x, y, currentPlayer)}\n                  className={`box box--${disc ? disc.p : \"\"}`}\n                >\n                  {`Box x: ${x}, y: ${y}`}\n                </div>\n              );\n            })}\n          </div>\n        ))}\n        <div>\n            <button className=\"btn-tb btn-tb--p\" onClick={()=> unDo()}>Undo</button>\n          </div>\n      </div>\n    </article>\n  );\n};\n\nexport { BoardGrid };\n","/** Grid */\n\n// import { useState } from \"react\";\nimport localforage from \"localforage\";\n\nimport { log } from \"../utils\"; // eslint-disable-line\nimport { GAME_STATE } from \"../constants\";\n\nconst BoardFooter = ({onChange}) => {\n  const reset = () => {\n    onChange(false);\n  };\n\n  const quit = () => {\n    localforage.clear().then(() => {\n      localforage.setItem(GAME_STATE.start, false).then(v => {\n        onChange(v);\n      });\n    });\n  };\n  return (\n    <footer>\n      <button className=\"btn-tb btn-tb--p\" onClick={() => reset()}>\n        Reset\n      </button>\n      <button className=\"btn-tb btn-tb--d\" onClick={() => quit()}>\n        Quit\n      </button>\n    </footer>\n  );\n};\n\n\nexport { BoardFooter };\n","/** Grid */\n\nimport { useState } from 'react';\nimport localforage from \"localforage\";\n\nimport { log } from \"../utils\"; // eslint-disable-line\nimport { BoardHeader } from \"./header\";\nimport { BoardGrid } from \"./board\";\nimport { BoardFooter } from \"./footer\";\nimport { APP_DEFAULTS } from '../constants';\n\nconst Board = ({onChange}) => {\n  const [ currentPlayer, setCurrentPlayer ] = useState(APP_DEFAULTS.starterColor);\n  const [ allUsers, setAllUsers ] = useState({});\n\n  localforage.getItem('users').then(usr => {\n    if(!Object.keys(allUsers).length) setAllUsers(usr);\n  })\n\n  return (\n    <section className=\"board\">      \n      <BoardHeader theme={currentPlayer} player={allUsers[currentPlayer]} />\n      <BoardGrid currentPlayer={currentPlayer} onPlayerMoves={(v) => setCurrentPlayer(v) } />\n      <BoardFooter onChange={onChange} />\n    </section>\n  );\n};\n\nexport { Board };\n","import { useState } from 'react';\nimport localforage from \"localforage\";\n\nimport { log } from '../utils'; // eslint-disable-line\nimport { GAME_STATE } from '../constants';\nimport { Start } from '../Start';\nimport { Board } from '../Board';\n\nfunction App() {\n  const [ start, setStart ] = useState(false);\n\n  localforage.getItem(GAME_STATE.start).then(state => {\n    setStart(state);\n  });\n\n  return (\n    <main>\n      {!start && <Start onStart={v => setStart(v)} />}\n      {start && <Board onChange={v => setStart(v)} />}\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\n\nimport { log } from './utils'; // eslint-disable-line\n\nimport './scss/index.scss';\nimport App from './App';\nimport { GAME_STATE } from './constants';\n\n// For local sessions\nlocalforage.config({\n  name: 'C4_ConnectFour',\n  storeName: 'C4_Store'\n});\n\nlocalforage.getItem(GAME_STATE.start).then(v => {\n  if(!v) localforage.setItem(GAME_STATE.start, false);\n});\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}